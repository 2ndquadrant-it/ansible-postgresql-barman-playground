---
#------------------------------------------------------------------------------
# Adjust /etc/hosts
#------------------------------------------------------------------------------
- name: Append hosts to /etc/hosts
  blockinfile:
    path: /etc/hosts
    insertafter: EOF
    block: "{{ lookup('template', 'hosts.j2') }}"

#------------------------------------------------------------------------------
# Create pgpass
#------------------------------------------------------------------------------
- name: Create an initial pgpass file on postgres servers
  lineinfile:
    path: ~/.pgpass
    line: "# hostname:port:database:username:password"
    create: yes
    mode: 0600
  become_user: postgres
  when: inventory_hostname in groups['postgres']

- name: Create an initial pgpass file on barman servers
  lineinfile:
    path: ~/.pgpass
    line: "# hostname:port:database:username:password"
    create: yes
    mode: 0600
  become_user: barman
  when: inventory_hostname in groups['barman']

#------------------------------------------------------------------------------
# Create SSH keys
#------------------------------------------------------------------------------
- name: Create SSH key for postgres user
  user:
    name: "{{ pg_user }}"
    generate_ssh_key: yes
  when: inventory_hostname in groups['postgres']

- name: Create SSH key for barman user
  user:
    name: "{{ barman_user }}"
    generate_ssh_key: yes
  when: inventory_hostname in groups['barman']

#------------------------------------------------------------------------------
# SELinux
#------------------------------------------------------------------------------
- name: Adjust SELinux context for SSH on postgres
  shell: restorecon /var/lib/pgsql/.ssh/ -r
  when:
    - inventory_hostname in groups['postgres']
    - ansible_selinux.status == "enabled"

- name: Adjust SELinux context for SSH on barman
  shell: restorecon /var/lib/barman/.ssh/ -r
  when:
    - inventory_hostname in groups['barman']
    - ansible_selinux.status == "enabled"

#------------------------------------------------------------------------------
# Exchange SSH keys between hosts
#------------------------------------------------------------------------------
- name: Retrieve postgres public keys
  shell: cat ~/.ssh/id_rsa.pub
  register: ssh_public_key_postgres
  become_user: postgres
  when: inventory_hostname in groups['postgres']

- name: Retrieve barman public keys
  shell: cat ~/.ssh/id_rsa.pub
  register: ssh_public_key_barman
  become_user: barman
  when: inventory_hostname in groups['barman']

- block:
    - name: Add postgres SSH keys to barman authorized_key
      authorized_key:
        user: barman
        key: "{{ hostvars[item].ssh_public_key_postgres.stdout }}"
        state: present
      loop: "{{ groups['postgres'] }}"

    - name: Add postgres servers to barman known_hosts
      lineinfile:
        dest: /var/lib/barman/.ssh/known_hosts
        create: yes
        group: barman
        owner: barman
        state: present
        line: "{{ lookup('pipe', 'ssh-keyscan {{ item }} ') }}"
      loop:
        - "{{ hostvars['paul'].ansible_host }}"
        - "{{ hostvars['john'].ansible_host }}"
  when: inventory_hostname in groups['barman']

- block:
    - name: Add barman SSH keys to postgres authorized_key
      authorized_key:
        user: postgres
        key: "{{ hostvars[item].ssh_public_key_barman.stdout }}"
        state: present
      loop: "{{ groups['barman'] }}"

    - name: Add barman servers to postgres known_hosts
      lineinfile:
        dest: /var/lib/pgsql/.ssh/known_hosts
        create: yes
        group: postgres
        owner: postgres
        state: present
        line: "{{ lookup('pipe', 'ssh-keyscan {{ item }} ') }}"
      loop:
        - "{{ hostvars['george'].ansible_host }}"
        - "{{ hostvars['ringo'].ansible_host }}"
  when: inventory_hostname in groups['postgres']
